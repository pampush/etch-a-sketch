html {
  box-sizing: border-box;
}

input {
  cursor: pointer;
}

*, *:before, *:after {
box-sizing: inherit;
}

.grid-container {
  height: 100vh;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
}

.grid-container__input {
  display: flex;
  align-content: center;
  flex-wrap: wrap;
  grid-row: 2;
  grid-column: 1;
}

.grid-container__input-submit {
  width: 100%;
  margin: 10px;
}
.grid-container__input-submit span {
  font-family: Helvetica, Arial, sans-serif;
  font-size: 1.5rem;
}
.grid-container__input-submit input[name='submit-button'] {
  display: block;
  width: 50px;
  border: 1px solid black;
  background-color: rgb(240, 239, 239);
  border-radius: 5px;
  outline: 0px;
  padding: 3px;
  margin-top: 3px;
  box-shadow: 2px 2px 5px black;
}

.grid-container__input-submit input[type='number'] {
  width: 150px;
  outline: none;
  padding-left: 5px;
  padding-bottom: 0px;
  margin-top: 5px;
  border: 1px solid black;
  border-radius: 2px;
  background-color: rgba(240, 239, 239, 0.521);
  box-shadow: inset 1px 1px 2px black;
}

.grid-container__input > input {
  width: 100px;
  border: 1px solid black;
  background-color: rgb(240, 239, 239);
  border-radius: 5px;
  outline: 0px;
  padding: 7px;
  margin: 10px;
  box-shadow: 2px 2px 5px black;
  /* display: block; */
}

input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button { 
  -webkit-appearance: none; 
  margin: 0; 
}

.grid-container__sketch {
  width: 500px;
  height: 500px;
  grid-row: 2;
  grid-column: 2;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
}

.grid-container__sketch  div {
  transition: all .5s ease; 
  border: .3px solid rgb(226, 226, 226); 
}

.grid-container__sketch-hover {
  /* border: 0px  how to ovverride it not using !important*/
  transform: rotate3d(0, 1, 0, 180deg);
}

@media screen and (min-width: 0px) {
  .grid-container__sketch {
    width: 300px;
    height: 300px;
  }
  .grid-container__input {
    grid-row: 1;
    grid-column: 2;
  }
}

@media screen and (min-width: 576px) {
  .grid-container__sketch {
    width: 400px;
    height: 400px;
  }
  .grid-container__input {
    grid-row: 1;
    grid-column: 2;
  }
}

@media screen and (min-width: 768px) {
  .grid-container__sketch {
    width: 500px;
    height: 500px;
  }
  .grid-container__input {
    grid-row: 1;
    grid-column: 2;
  }
}

@media screen and (min-width: 992px) {
  .grid-container__sketch {
    width: 600px;
    height: 600px;

  }
  .grid-container__input {
    grid-row: 2;
    grid-column: 1;
  }
}

@media screen and (min-width: 1200px) {
  .grid-container__sketch {
    width: 700px;
    height: 700px;
  }
  .grid-container__input {
    grid-row: 2;
    grid-column: 1;
  }
}

/*  drawback: perfect for this assignment (changing backgrounds), 
    but if you want to add content in cell you need to use relative/absolute positioning
.square-cell__trick {
  position:relative;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
} 

.square-cell__trick-elem {
  position:relative;
  border: 1px solid black;
}
.square-cell__trick-elem:before {
  display:block;
  content: "";
  padding-top: 100%; // calculated based on the width!
}

.square-cell__trick .content {
  position: absolute;
  top: 0; left: 0;
}
*/
/* 2nd approach 
  view  

*/